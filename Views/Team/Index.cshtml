@using KornikTournament.Data
@using KornikTournament.Enums
@using KornikTournament.Helpers
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Microsoft.EntityFrameworkCore
@model AddParticipant
@inject ApplicationContext context

@{
    var team = ViewData["Team"] as Team ?? new Team { Name = null!, Tag = null! };
    ViewBag.Title = team.Name;
    Layout = "_Layout";

    var user = context.Participants.Include(x => x.Team).FirstOrDefault(x => x.Nickname == Context.User.Identity.Name);

    if (user is null)
    {
        <p class="text-center"><span class="text-danger">404.</span> Nie masz dostępu do tych zasobów🤷‍♂</p>
        return;
    }
    
    var type = ViewData["Error"] as ErrorTypes?;

    var error = ErrorHandler.HandleError(type);

    var state = TournamentSettingsHelper.GetTournamentState();
}

@if (!Context.User.Identity.IsAuthenticated || team.Id != user.Team.Id)
{
    <p class="text-center"><span class="text-danger">404.</span> Nie masz dostępu do tych zasobów🤷‍♂</p>
    return;
}

<div class="text-center">
    
    <h1>@team.Name</h1>
    <h5>#@team.Tag</h5>

    <table class="table text-light">
        <tr>
            <th>Imie</th> <th>Nazwisko</th> <th>Nickname</th> <th>Rola</th> <th>Klasa</th> 
            @if (state != ETournamentState.Ended && state != ETournamentState.Started)
            {
                <th>Usuń</th>
            }
        </tr>
        @foreach (var participant in team.Participants.OrderBy(x => x.Roles))
        {
            <tr>
                <td>@participant.Name</td>
                <td>@participant.Surname</td>
                <td>@participant.Nickname</td>
                <td>@participant.Roles.ToString()</td>
                <td>@participant.Class</td>
                
                @if(state != ETournamentState.Ended && state != ETournamentState.Started)
                {
                    <td>
                        @using (Html.BeginForm("DeleteParticipant", "Team"))
                        {
                            <input type="hidden" name="id" value=@participant.Id />
                            <input type="hidden" name="teamId" value=@team.Id />
                            <input type="submit" value="Usuń" />
                        }
                    </td>
                }

            </tr>
        }
    </table>
    
    @if (team.Participants.Count < 5)
    {
        <form asp-action="AddToTeam" autocomplete="off">
        
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="w-100 d-flex justify-content-center">
                <div class="form-group team_form">
    
                    <label class="control-label">Imie</label>
                    <input asp-for="Name" class="form-control"/>
                    <span asp-validation-for="Name" Title="text-danger"></span>
    
                    <label class="control-label">Nazwisko</label>
                    <input asp-for="Surname" class="form-control"/>
                    <span asp-validation-for="Surname" Title="text-danger"></span>
    
                    <label class="control-label">Summoner name</label>
                    <input asp-for="Nickname" class="form-control"/>
                    <span asp-validation-for="Nickname" Title="text-danger"></span>
    
                    <label class="control-label">Klasa</label>
                    <input asp-for="Class" class="form-control" placeholder="format: np. 4i1" maxlength="4"/>
                    <span asp-validation-for="Class" Title="text-danger"></span>
                
                    <div class="m-4">
                        <label class="control-label">Rola</label>
                        <select asp-for="Role" class="bg-dark text-light">
                            <option>Top</option>
                            <option>Jg</option>
                            <option>Mid</option>
                            <option>Adc</option>
                            <option>Support</option>
                        </select>
                    </div>
    
                    <input asp-for="TeamId" value="@team.Id" hidden/>
                </div>
            </div>

            <div class="form-group">
                <input type="submit" value="Dodaj członka drużyny" class="btn btn-primary"/>
                <p class="text-danger">@error</p>
            </div>
        </form>
    }
    
    <div class="w-100 d-flex justify-content-center flex-grow-0 mt-3 p-2">
        @if (state != ETournamentState.Ended && state != ETournamentState.Started)
        {
            using (Html.BeginForm("DeleteTeam", "Team"))
            {
                <input type="hidden" name="Id" value=@team.Id/>
                <input type="submit" value="Usuń drużyne" class="btn btn-danger right"/>
            }
        }

        @using (Html.BeginForm("Logout", "Team"))
        {
            <input type="submit" value="Wyloguj się" class="btn btn-danger"/>
        }
    </div>
    
</div>

<style>
    .right {
        margin-right: 1rem;
    }
</style>