@using KornikTournament.Data
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Microsoft.EntityFrameworkCore
@model AddParticipant
@inject ApplicationContext context

@{
    var team = ViewData["Team"] as Team ?? new Team { Name = null!, Tag = null! };
    ViewBag.Title = team.Name;
    Layout = "_Layout";

    var user = context.Participants.Include(x => x.Team).FirstOrDefault(x => x.Nickname == Context.User.Identity.Name);

    if (user is null)
    {
        <p class="text-center"><span class="text-danger">404.</span> Nie masz dostępu do tych zasobów🤷‍♂</p>
        return;
    }
}

@if (!Context.User.Identity.IsAuthenticated || team.Id != user.Team.Id)
{
    <p class="text-center"><span class="text-danger">404.</span> Nie masz dostępu do tych zasobów🤷‍♂</p>
    return;
}

<div class="text-center">
    
    <h1>@team.Name</h1>
    <h5>#@team.Tag</h5>

    <table class="table">
        <tr>
            <th>Imie</th> <th>Nazwisko</th> <th>Nickname</th> <th>Rola</th> <th>Klasa</th> <th>Usuń</th>
        </tr>
        @foreach (var participant in team.Participants.OrderBy(x => x.Roles))
        {
            <tr>
                <td>@participant.Name</td>
                <td>@participant.Surname</td>
                <td>@participant.Nickname</td>
                <td>@participant.Roles.ToString()</td>
                <td>@participant.Class</td>
                <td>
                    @using (Html.BeginForm("DeleteParticipant", "Team"))
                    {
                        <input type="hidden" name="id" value=@participant.Id />
                        <input type="hidden" name="teamId" value=@team.Id />
                        <input type="submit" value="Usuń" />
                    }
                </td>
            </tr>
        }
    </table>
    
    @if (team.Participants.Count < 5)
    {
        <form asp-action="AddToTeam">
        
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">

                <label class="control-label">Imie</label>
                <input asp-for="Name" class="form-control"/>
                <span asp-validation-for="Name" Title="text-danger"></span>

                <label class="control-label">Nazwisko</label>
                <input asp-for="Surname" class="form-control"/>
                <span asp-validation-for="Surname" Title="text-danger"></span>

                <label class="control-label">Nickname</label>
                <input asp-for="Nickname" class="form-control"/>
                <span asp-validation-for="Nickname" Title="text-danger"></span>

                <label class="control-label">Klasa</label>
                <input asp-for="Class" class="form-control" placeholder="format: np. 4i1" maxlength="4"/>
                <span asp-validation-for="Class" Title="text-danger"></span>
            
                <label class="control-label">Rola</label>
                <select asp-for="Role">
                    <option>Top</option>
                    <option>Jg</option>
                    <option>Mid</option>
                    <option>Adc</option>
                    <option>Support</option>
                </select>

                <input asp-for="TeamId" value="@team.Id" hidden/>
            </div>
            <div class="form-group">
                <input type="submit" value="Dodaj członka drużyny" class="btn btn-primary"/>
            </div>
        </form>
    }
    
    <br />
    
    @using (Html.BeginForm("DeleteTeam", "Team"))
    {
        <input type="hidden" name="Id" value=@team.Id />
        <input type="submit" value="Usuń drużyne" class="btn btn-danger" />
    }

</div>